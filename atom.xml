<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Teemo&#39;s Notes</title>
  
  <subtitle>做点有趣的事情</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-05-28T12:25:18.848Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Ming_Hou</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式-模版方法模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A8%A1%E7%89%88%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%A8%A1%E7%89%88%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:25:17.059Z</published>
    <updated>2021-05-28T12:25:18.848Z</updated>
    
    
    
    
    <category term="设计模式-行为型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A1%8C%E4%B8%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-策略模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:24:54.364Z</published>
    <updated>2021-05-28T12:24:55.415Z</updated>
    
    
    
    
    <category term="设计模式-行为型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A1%8C%E4%B8%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-观察者模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:24:32.426Z</published>
    <updated>2021-05-28T12:24:34.677Z</updated>
    
    
    
    
    <category term="设计模式-行为型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A1%8C%E4%B8%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-命令模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:24:05.304Z</published>
    <updated>2021-05-28T12:24:08.177Z</updated>
    
    
    
    
    <category term="设计模式-行为型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A1%8C%E4%B8%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-责任链模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:23:36.091Z</published>
    <updated>2021-05-28T12:23:36.091Z</updated>
    
    
    
    
    <category term="设计模式-行为型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A1%8C%E4%B8%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-代理模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:23:04.334Z</published>
    <updated>2021-05-28T12:23:04.334Z</updated>
    
    
    
    
    <category term="设计模式-结构型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%93%E6%9E%84%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-装饰器模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:22:44.538Z</published>
    <updated>2021-05-28T12:22:44.538Z</updated>
    
    
    
    
    <category term="设计模式-结构型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%93%E6%9E%84%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-适配器模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:22:14.735Z</published>
    <updated>2021-05-28T12:22:25.556Z</updated>
    
    
    
    
    <category term="设计模式-结构型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%BB%93%E6%9E%84%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-原型模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:21:25.348Z</published>
    <updated>2021-05-28T12:21:26.780Z</updated>
    
    
    
    
    <category term="设计模式-创建型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-工厂方法模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:20:57.826Z</published>
    <updated>2021-05-28T12:20:57.826Z</updated>
    
    
    
    
    <category term="设计模式-创建型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-抽象工厂模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:20:30.801Z</published>
    <updated>2021-05-28T12:20:30.801Z</updated>
    
    
    
    
    <category term="设计模式-创建型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-简单工厂模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:20:08.719Z</published>
    <updated>2021-05-28T12:20:08.720Z</updated>
    
    
    
    
    <category term="设计模式-创建型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-建造者模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:18:41.251Z</published>
    <updated>2021-05-28T12:18:41.928Z</updated>
    
    
    
    
    <category term="设计模式-创建型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-单例模式</title>
    <link href="http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/05/28/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-05-28T12:16:18.589Z</published>
    <updated>2021-05-28T12:18:05.547Z</updated>
    
    
    
    
    <category term="设计模式-创建型" scheme="http://example.com/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%88%9B%E5%BB%BA%E5%9E%8B/"/>
    
    
    <category term="设计模式" scheme="http://example.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>突破第一天</title>
    <link href="http://example.com/2021/05/28/%E7%AA%81%E7%A0%B4%E8%87%AA%E5%B7%B1%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2021/05/28/%E7%AA%81%E7%A0%B4%E8%87%AA%E5%B7%B1%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2021-05-28T07:56:50.851Z</published>
    <updated>2021-05-28T12:14:56.350Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>With my own ears I clearly heard the heart beat of the nuclear bom.</p><p>释义：我亲耳</p></li><li><p>Next year the bearded bear will bear a dear baby in the rear.</p><p>释义：</p></li><li><p>Early I searched through the earth for earthware so as to research in earthquake.</p><p>释义：</p></li><li><p>I learn that learned earnest men earn much by learning.</p><p>释义：</p></li><li><p>She swears to wear the pearls that appear to be pears.</p><p>释义：</p></li><li><p>I nearly fear to tear the tearful girl’s test paper.</p><p>释义：</p></li><li><p>The bold folk fold up the gold and hold it in hand.</p><p>释义：</p></li><li><p>The customers are accustomed to the disgusting custom.</p><p>释义：</p></li><li><p>The dust in the industrial zone frustrated the industrious man.</p><p>释义：</p></li><li><p>The just budget judge just justifies the adjustment of justice.</p><p>释义：</p></li><li><p>I used to abuse the unusual usage, but now I’m not used to doing so.</p><p>释义：</p></li><li><p>The lace placed in the palace is replaced first, and displaced later.</p><p>释义：</p></li><li><p>I paced in the peaceful spacecraft.</p><p>释义：</p></li><li><p>Sir, your bird stirred my girlfriend’s birthday party.</p><p>释义：</p></li><li><p>The waterproof material is suitable for the aerial used near the waterfall.</p><p>释义：</p></li><li><p>I hint that the faint saint painted the printer with a pint of paint.</p><p>释义：</p></li><li><p>At any rate, the separation ratio is accurate.</p><p>释义：</p></li><li><p>The boundary around the round ground separates us from the surroundings.</p><p>释义：</p></li><li><p>The blunder made the underground instrument undergo an undermining of the thunderbolt.</p><p>释义：</p></li><li><p>The tilted salt filters halt alternately for altering.</p><p>释义：</p></li><li><p>The wandering band abandoned her bandaged husband on Swan Island.</p><p>释义：</p></li><li><p>The manly Roman woman manager by the banner had man’s manner.</p><p>释义：</p></li><li><p>In the lane the planer saw a planet airplane under the crane.</p><p>释义：</p></li><li><p>The wet pet in the net hasn’t got on the jet plane yet.</p><p>释义：</p></li><li><p>After maintenance the main remains and remainders are left on the domain.</p><p>释义：</p></li><li><p>The grandson branded the brandy randomly.</p><p>释义：</p></li><li><p>The landlord’s land on the hightland of the mainland expanded a lot.</p><p>释义：</p></li><li><p>Utilize the fertilizer to keep the land fertile.</p><p>释义：</p></li><li><p>The grand commander demands thousands of sandy sandwiches.</p><p>释义：</p></li><li><p>I infer that he is indifferent to differentiating the offers in different conferences.</p><p>释义：</p></li><li><p>The maximum plus or minus the minimum makes minute difference.</p><p>释义：</p></li><li><p>The witty witness withdraws his words within minutes without any reason.</p><p>释义：</p></li><li><p>The cake maker shakes a naked snake with the quaking rake without sake.</p><p>释义：</p></li><li><p>By the crook, the cook looked through a cookbook before making hooked cookies.</p><p>释义：</p></li><li><p>The writer writes the white book quite quietly in quilt.</p><p>释义：</p></li><li><p>On the chilly hillside, he is unwilling to write his will on the ten-shilling bill.</p><p>释义：</p></li><li><p>The weaver will leave for the heavy heaven.</p><p>释义：</p></li><li><p>The handy left-hander left a handsome handkerchief on the handle of the handbag.</p><p>释义：</p></li><li><p>The thief chief achieved the theft of a handkerchief for mischief.<br>释义：</p></li><li><p>I believe my brief words will relieve her grief.</p><p>释义：</p></li><li><p>At the dock I’m shocked to see the pocket rocket made of a block of rock.</p><p>释义：</p></li><li><p>Standing under the outstanding rock I misunderstood his standard standpoint.</p><p>释义：</p></li><li><p>The substantial part of the constitution about the institution of institutes is substituted.</p><p>释义：</p></li><li><p>Spell smell! Very well, the well-being for human being will swell.</p><p>释义：</p></li><li><p>Once none of you is here, the man in throne will live alone in the lonely zone.</p><p>释义：</p></li><li><p>Nowadays the once unknown snowy hill is well-known for snowstorm.</p><p>释义：</p></li><li><p>For instance, I can instantly know the constant distance.</p><p>释义：</p></li><li><p>The man beyond the bond is fond of the second wonderful diamond.</p><p>释义：</p></li><li><p>While sinking into thinking, the shrinking linkman drank the pink ink sprinkled on the wrinkly paper.</p><p>释义：</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;With my own ears I clearly heard the heart beat of the nuclear bom.&lt;/p&gt;
&lt;p&gt;释义：我亲耳&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next year the bearded bear wi</summary>
      
    
    
    
    <category term="English" scheme="http://example.com/categories/English/"/>
    
    
    <category term="English" scheme="http://example.com/tags/English/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Next排坑记录</title>
    <link href="http://example.com/2021/05/26/Hexo-Next%E6%8E%92%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/05/26/Hexo-Next%E6%8E%92%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2021-05-26T06:11:37.576Z</published>
    <updated>2021-05-28T12:39:26.033Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo构建博客</p><p>优秀前辈的博客：<br><a href="https://www.zhyong.cn/">https://www.zhyong.cn/</a><br><a href="https://siriusq.top/">https://siriusq.top/</a></p><h3 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h3><h4 id="hexo换主题乱码问题的解决"><a href="#hexo换主题乱码问题的解决" class="headerlink" title="hexo换主题乱码问题的解决"></a>hexo换主题乱码问题的解决</h4><ul><li><p>问题表现</p><p>% extends ‘_layout.swig’  import ‘_macro/post.swig’ as post_template </p></li><li><p>问题原因</p><p>原因是hexo在5.0之后把swig给删除了需要自己手动安装</p></li><li><p>问题解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-swig</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean          </span><br><span class="line">hexo generate      </span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></li></ul><h4 id="Hexo-Next-主题首页宽度调整"><a href="#Hexo-Next-主题首页宽度调整" class="headerlink" title="Hexo Next 主题首页宽度调整"></a>Hexo Next 主题首页宽度调整</h4><p>改动目录：themes\next\css_schemes\Picses_layout.styl</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">-- 追加</span><br><span class="line">header&#123; width: 90% !important; &#125;</span><br><span class="line">header.post-header &#123;</span><br><span class="line">  width: auto !important;</span><br><span class="line">&#125;</span><br><span class="line">.container .main-inner &#123; width: 90%; &#125;</span><br><span class="line">.content-wrap &#123; width: calc(100% - 260px); &#125;</span><br><span class="line"></span><br><span class="line">.header &#123;</span><br><span class="line">  +tablet() &#123;</span><br><span class="line">    width: auto !important;</span><br><span class="line">  &#125;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    width: auto !important;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container .main-inner &#123;</span><br><span class="line">  +tablet() &#123;</span><br><span class="line">    width: auto !important;</span><br><span class="line">  &#125;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    width: auto !important;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.content-wrap &#123;</span><br><span class="line">  +tablet() &#123;</span><br><span class="line">    width: 100% !important;</span><br><span class="line">  &#125;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    width: 100% !important;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Hexo-Next-主题分页显示异常"><a href="#Hexo-Next-主题分页显示异常" class="headerlink" title="Hexo Next 主题分页显示异常"></a>Hexo Next 主题分页显示异常</h4><p>改动目录：themes\next\layout_partials\pagination.swig</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.prev or page.next %&#125;</span><br><span class="line">  &lt;nav class=&quot;pagination&quot;&gt;</span><br><span class="line">    &#123;&#123;</span><br><span class="line">      paginator(&#123;</span><br><span class="line">        prev_text: &#x27;&lt;&#x27;,</span><br><span class="line">        next_text: &#x27;&gt;&#x27;,</span><br><span class="line">        mid_size: 1</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;&#125;</span><br><span class="line">  &lt;/nav&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo构建博客&lt;/p&gt;
&lt;p&gt;优秀前辈的博客：&lt;br&gt;&lt;a href=&quot;https://www.zhyong.cn/&quot;&gt;https://www.zhyong.cn/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://siriusq.top/&quot;&gt;https://siriusq</summary>
      
    
    
    
    <category term="hexo入坑指南" scheme="http://example.com/categories/hexo%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/05/26/hello-world/"/>
    <id>http://example.com/2021/05/26/hello-world/</id>
    <published>2021-05-26T05:37:20.839Z</published>
    <updated>2021-05-26T14:45:29.175Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="hexo入坑指南" scheme="http://example.com/categories/hexo%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97/"/>
    
    
    <category term="神引篇" scheme="http://example.com/tags/%E7%A5%9E%E5%BC%95%E7%AF%87/"/>
    
  </entry>
  
  <entry>
    <title>事物篇</title>
    <link href="http://example.com/2021/03/29/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%AF%87/"/>
    <id>http://example.com/2021/03/29/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%AF%87/</id>
    <published>2021-03-29T06:45:28.470Z</published>
    <updated>2021-05-28T12:00:22.907Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本地事务"><a href="#本地事务" class="headerlink" title="本地事务"></a>本地事务</h2><p>数据操作的最小单元是事务，而不是一条SQL语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">start transaction;</span><br><span class="line">begin;//开始事务，对数据的dml操作不直接修改数据表，而是先被记录到日志文件中</span><br><span class="line">commit;//提交事务，将日志中的记录操作，永久保存在数据表中，并清空日志文件。</span><br><span class="line">rollback;//回滚事务，直接清空日志文件</span><br></pre></td></tr></table></figure><h4 id="事务特性"><a href="#事务特性" class="headerlink" title="事务特性"></a>事务特性</h4><p><strong>ACID</strong></p><ul><li>A - 原子性 Atomic</li></ul><p>一个事务是一个不可分割的工作单元，事务中包括的操作要么都做，要么都不做。</p><p>数据操作的最小单元是事务，而不是SQL语句 。</p><ul><li>C - 一致性 Consistency</li></ul><p>事务必须是使数据库从一个一致性状态变到另一个一致性状态。一致性与原子性是密切相关的</p><ul><li>I - 隔离性 Isolation</li></ul><p>一个事务的执行不能被其他事务干扰。</p><p>即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。</p><ul><li>D - 持久性 Durancy</li></ul><p>一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其有任何影响。</p><h4 id="传播属性"><a href="#传播属性" class="headerlink" title="传播属性"></a>传播属性</h4><ul><li>传播行为决定了事务上下文是否共享,子事务若共享父事务的状态，那么对子事务的操作，就会反映到父事务(核心)</li><li>事务的传播行为体现了原子性</li><li>事务传播属性注解必须应用到公有方法</li></ul><ol><li><p>REQUIRED</p><p>业务方法必须处于事务中运行。如果有事务就加入其中，没有就为自己创建一个新的事务</p></li><li><p>NOT_SUPPORTED（不需要父事务，如果有就挂起父事务）</p><p>声明方法不需要事务。如果方法没有关联到一个事务，容器不会为它开启事务。如果方法在一个事务中被调用，该事务会被挂起，在方法调用结束后，原先的事务便会恢复执行。<br>应用场景：有数据操作处理(需要事务)+异步调用(不需要事务，挂起)</p></li><li><p>REQUIRESNEW（新建业务事务，挂起父事务）</p><p>不管是否存在事务，都新建一个事务；若方法已经运行在一个事务中，则原有事务会被挂起，新的事务会被创建，直到方法执行结束，新事物才算结束，原有事务才恢复执行</p></li><li><p>MANDATORY（需要在父事务下运行，否则抛异常）</p><p>该属性指定业务方法只能在一个已经存在的事务中执行，业务方法不能发起自己的事务（新事物）。如果业务方法在没有事务的环境下调用，容器就会抛出异常</p></li><li><p>SUPPORTS（父事务可有可无，不新建业务事务）</p><p>有事务就直接加入使用，没有事务就按照没有事务的情况执行</p></li><li><p>NEVER（不能出现任何父事务）</p><p>业务方法不能与任何事务关联，否则直接抛异常</p><p>应用场景：应用与报表统计程序</p></li><li><p>NESTED</p><p>如果一个活动的事务存在，则运行在一个嵌套的事务中. 如果没有活动事务, 则按REQUIRED属性执行.它使用了一个单独的事务， 这个事务拥有多个可以回滚的保存点。内部事务的回滚不会对外部事务造成影响。它只对DataSourceTransactionManager事务管理器起效</p><p>事务嵌套，子事务的成功与失败不影响主事务，主事务的成功失败影响子事务</p></li></ol><h4 id="隔离级别"><a href="#隔离级别" class="headerlink" title="隔离级别"></a>隔离级别</h4><p>事务为了避免相互干扰，执行时要进行隔离。也就是A执行时要B等待。但严格的隔离会造成性能的下降。数据库为了兼顾数据安全和性能，允许在一定程度上多个事务并行执行</p><p>Mysql四种事务<strong>隔离级别从低到高</strong>（越高数据越安全；越低性能越好，但会造成数据访问的问题）：</p><ul><li>READ-UNCOMMITTED</li><li>READ-COMMITTED</li><li>REPEATABLE-READ      <strong>Mysql 的默认隔离级别</strong>   可重复读</li><li>SERIALIZABLE</li></ul><table><thead><tr><th>可能引发的问题</th><th>READ-UNCOMMITTED</th><th>READ-COMMITTED</th><th>REPEATABLE-READ</th><th>SERIALIZABLE</th></tr></thead><tbody><tr><td>幻读</td><td>✅</td><td>✅</td><td>✅</td><td>❌</td></tr><tr><td>不可重复读</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td>脏读</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr></tbody></table><p>数据库并发访问的冲突问题</p><ul><li><p><strong>脏读</strong></p><p>读到其他事务未提交的数据</p></li><li><p><strong>不可重复读</strong></p><p>重复读取同一数据时，与之前读取的数据不一致</p><p>一个事务提交的数据，可以被另一个事务立即读取</p><p>一个事务内在读取某些数据后的某个时间，再次读取以前读过的数据，却发现其读出的数据已经发生了变更、或者某些记录已经被删除了。(<strong>Update\Delete</strong>)</p></li><li><p><strong>幻读</strong></p><p>读取到已经被删除的数据</p><p>读取不到新插入的数据</p><p>例如：系统事务A将数据库中所有数据都删除的时候，但是事务B就在这个时候新插入了一条记录，当事务A删除结束后发现还有一条数据，就好像发生了幻觉一样。这就叫幻读</p></li></ul><p>四、实际场景中的七大事务传播行为的使用<br>4.1 在一个话费充值业务处理逻辑中，有如下图所示操作:</p><p>业务需要扣款操作和创建订单操作同成功或者失败，因此，charger()和order()的事务不能相互独立，需要包含在chargeHandle()的事务中；<br>通过以上需求，可以给charge()和order()的事务传播行为定义成：PROPAGATION_MANDATORY<br>只要charge()或者order()抛出异常整个chargeHandle()都一起回滚，即使chargeHandle()捕获异常也没用，不允许提交事务<br>4.2 如果业务需求没接受到一次请求到要记录日志到数据库<br>如下图：</p><p>因为log()的操作不管扣款和创建订单成功与否都要生成日志，并且日志的操作成功与否不影响充值处理，所以log()方法的事务传播行为可以定义为:PROPAGATION_REQUIRES_NEW.</p><p>4.3 在订单的售后处理中，更新完订单金额后，需要自动统计销售报表<br>如下图所示</p><p>根据业务可知，售后是已经处理完订单的充值请求后的功能，是对订单的后续管理，统计报表report()方法耗时较长，因此，我们需要设置report()的事务传播行为为:PROPAGATION_NEVER,表示不适合在有事务的操作中调用，因为report()太耗时。</p><p>4.4 在银行新增银行卡业务中，需要执行两个操作<br>一个是保存银行卡信息，一个是登记新创建的银行卡信息，其中登记银行卡信息成功与否不影响银行卡的创建。</p><p>由以上需求，我们可知对于regster()方法的事务传播行为，可以设置为PROPAGATION_NESTED</p><p>action()事务的回滚，regster()保存的信息就没意义，也就需要跟着回滚，而regster()的回滚不影响action()事务；</p><p>insert()的事务传播行为可以设置为PROPAGATION_REQUIRED, PROPAGATION_MANDATORY，即insert()回滚事务,action()的事务必须跟着回滚。</p><p>————————————————<br>版权声明：本文为CSDN博主「有恒则成」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/hardworking0323/article/details/81001582">https://blog.csdn.net/hardworking0323/article/details/81001582</a></p><h2 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a>分布式事务</h2><h4 id="XA（2-Phase-Commit）"><a href="#XA（2-Phase-Commit）" class="headerlink" title="XA（2-Phase-Commit）"></a>XA（2-Phase-Commit）</h4><ol><li><p>概念</p><p>阶段一：提交事务请求（投票阶段）</p><p>阶段二：执行事务提交（执行阶段）</p></li><li><p>使用特点</p><p>优点：</p><p>缺点：同步阻塞、单点问题、<strong>数据不一致</strong>/脑裂、太过保守</p></li><li><p>适用场景</p><p>同一个业务系统使用多个数据源操作（不建议在微服务架构下使用）</p></li><li><p>解决方案</p><p>WebLogic/Webshare    Spring JTA</p><p>Tomcat    Jotm、Automikos整合Spring事务</p></li></ol><h4 id="TCC（Try-Confirm-Commit）"><a href="#TCC（Try-Confirm-Commit）" class="headerlink" title="TCC（Try-Confirm-Commit）"></a>TCC（Try-Confirm-Commit）</h4><ol><li><p>概念（补偿性事务）</p><p>阶段一（Try）：完成所有业务检查（一致性），预留必须业务资源（准隔离性）</p><p>阶段二（Confirm）：使用Try阶段预留的业务资源执行业务（业务操作必须幂等性），如果执行出现异常，要进行重试</p><p>阶段三（Cancel）：释放Try阶段预留的业务资源，在这里就是释放资源锁定</p><p>如果在任一子业务Confirm阶段有操作无法执行成功，会造成多业务活动管理器的响应超时，此时要对其他业务执行补偿性事务/如果补偿操作执行也出现异常，必须进行<strong>重试</strong>。若实在无法执行成功，则事务管理器必须能够感知到失败的操作，进行log（用于事后人工进行补偿型事务操作或者交由中间件接管在之后进行补偿事务操作）</p></li><li><p>使用特点</p><p>优点：</p><p>缺点：<strong>网络问题</strong></p></li><li><p>适用场景</p><ul><li>严格一致性</li><li>执行时间短</li><li>实施性要求高</li></ul><p>业务：资金账户、红包、收付款业务等</p></li><li><p>解决方案：Seata TCC</p></li></ol><h4 id="异步确保型-可靠消息最终一致性（基于消息队列实现）"><a href="#异步确保型-可靠消息最终一致性（基于消息队列实现）" class="headerlink" title="异步确保型/可靠消息最终一致性（基于消息队列实现）"></a>异步确保型/可靠消息最终一致性（基于消息队列实现）</h4><ol><li><p>概念</p></li><li><p>使用特点</p><p>优点：</p><p>缺点：</p></li><li><p>适用场景</p></li><li><p>解决方案：Rocket MQ</p></li></ol><h4 id="尽最大努力通知型"><a href="#尽最大努力通知型" class="headerlink" title="尽最大努力通知型"></a>尽最大努力通知型</h4><h2 id="seata框架支持的事务模式"><a href="#seata框架支持的事务模式" class="headerlink" title="seata框架支持的事务模式"></a>seata框架支持的事务模式</h2><p>流行程度：AT &gt; TCC &gt; Saga</p><h4 id="AT模式"><a href="#AT模式" class="headerlink" title="AT模式"></a>AT模式</h4><h5 id="三种角色"><a href="#三种角色" class="headerlink" title="三种角色"></a>三种角色</h5><p>TC（Transaction Coordinator）事务协调者</p><p>维护全局和分支事务的状态，驱动全局事务提交或回滚</p><p>TM（Transaction Manager）事务管理器</p><p>定义全局事务的范围：开始全局事务、提交或回滚全局事务</p><p>RM（Resource Manager）资源管理器</p><p>管理分支事务处理的资源，与TC交互以注册分支事务和报告事务的状态，并驱动分支事务提交或回滚；</p><p>其中TC为单独部署的Server服务端，TM和RM为嵌入到应用中的Client客户端</p><h5 id="声明周期"><a href="#声明周期" class="headerlink" title="声明周期"></a>声明周期</h5><p>TM请求TC开启一个全局事务，TC会生成一个XID座位全局事务的编号</p><p>XID会在微服务的调用链路中传播，保证将多个微服务的子事务关联在一起；</p><p>RM请求TC将本地事务注册为全局事务的分支事务，通过全局事务的XID 进行关联</p><p>TM请求TC告诉XID对应的全局事务是进行提交还是回滚</p><h5 id="AT模式环境部署"><a href="#AT模式环境部署" class="headerlink" title="AT模式环境部署"></a>AT模式环境部署</h5><ol><li><p>TC Server运行环境部署</p><p>​        TC 需要进行全局事务和分支事务的记录，所以需要对应的存储，母亲，TCC有三种存储模式（store.mode）;</p><p>​        <strong>file模式</strong>：适合单机模式，全局事务会话信息在内存中读写，并持久化本地文件root.data，性能较高</p><p>​        <strong>db模式</strong>：适合集群模式，全局事务会话信息通过db共享，相对性能差点</p><p>​        <strong>redis模式</strong>：解决db存储的性能问题</p></li><li><p>Seata运行环境部署</p><p>下载Seata：http:///seata.io/zh-cn/bloh/download.html</p><p>解压：tar -zxvf seats-server-1.3.0.tar.gz</p><p>切换 cd seata</p><p>默认seat-server.sh脚本设置的jvm内存参数2G</p><p>在bin目录下启动：./seata-server.sh</p><p>默认配置下，Seata TC Server启动在8091端口；在file模式下，可以看到用于持久化的本地文件root.data</p></li></ol><h5 id="AT模式事务案例："><a href="#AT模式事务案例：" class="headerlink" title="AT模式事务案例："></a>AT模式事务案例：</h5><h6 id="单体应用多数据源分布式事务"><a href="#单体应用多数据源分布式事务" class="headerlink" title="单体应用多数据源分布式事务"></a>单体应用多数据源分布式事务</h6><p>在spring boot单体项目中，如果使用了多数据源，就需要考虑多个数据源的数据一致性，即产生分布式事务的问题，可以采用Seata 的AT事务模式来解决该分布式事务问题</p><p>每个数据库需要有undo_log表，主要用于分支事务的回滚</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 注意此处0.7.0+ 增加字段 context</span><br><span class="line">CREATE TABLE `undo_log` (</span><br><span class="line">  `id` bigint(20) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `branch_id` bigint(20) NOT NULL,</span><br><span class="line">  `xid` varchar(100) NOT NULL,</span><br><span class="line">  `context` varchar(128) NOT NULL,</span><br><span class="line">  `rollback_info` longblob NOT NULL,</span><br><span class="line">  `log_status` int(11) NOT NULL,</span><br><span class="line">  `log_created` datetime NOT NULL,</span><br><span class="line">  `log_modified` datetime NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`),</span><br><span class="line">  UNIQUE KEY `ux_undo_log` (`xid`,`branch_id`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 添加依赖seate</span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">-- dynamic datasource</span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#是否启动对Seate的集成</span></span><br><span class="line"><span class="meta">spring.datasource.dynamic.seate</span>=<span class="string">true</span></span><br><span class="line"><span class="comment">#Seata应用编号，默认为$&#123;spring.application.name&#125;</span></span><br><span class="line"><span class="meta">seata.tx-service-group</span>=<span class="string">$&#123;Spring。application.name&#125;-group</span></span><br><span class="line"><span class="comment">#虚拟组和分组的映射=seata.tx-service-group</span></span><br><span class="line"><span class="meta">seata.service.vgroup-mapping.29-seata-distributed-transaction-group</span>=<span class="string">default</span></span><br><span class="line"><span class="meta">seata.service.vgroup-mapping.$&#123;seata.tx-service-group&#125;</span>=<span class="string">default</span></span><br><span class="line"><span class="comment">#分组和seata服务的映射</span></span><br><span class="line"><span class="meta">seata.service.grouplist.default</span>=<span class="string">192.168.128:8091</span></span><br><span class="line"><span class="meta">seata.config.type</span>=<span class="string">file</span></span><br><span class="line"><span class="meta">seata.registry.type</span>=<span class="string">file</span></span><br></pre></td></tr></table></figure><p>Seata全局事务注解 @GlobalTransactional</p><h6 id="微服务的分布式事务"><a href="#微服务的分布式事务" class="headerlink" title="微服务的分布式事务"></a>微服务的分布式事务</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 添加依赖seate</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;spring-cloud-starter-alibaba-seata&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name=29-seata.distributed-order-service</span><br><span class="line">-- seata的配置</span><br><span class="line">seata.application-id=$&#123;spring.application.name&#125;</span><br><span class="line">seata.tx-service-group=$&#123;spring.application.name&#125;-group</span><br><span class="line">seata.service.vgroup-mapping.29-seata-distributed-order-service-group=default</span><br><span class="line">seata.service.grouplist.default=192.168.172.128:8091</span><br><span class="line">seata.registry.type=file</span><br></pre></td></tr></table></figure><p>AT事务模式分布式事务工作机制</p><p><strong>前提</strong></p><p>基于支持本地ACID事务的关系型数据库（mysql、oracle）</p><p>Java应用，通过JDBC访问数据库</p><p><strong>整体机制</strong></p><p>就是两阶段提交协议的演变</p><ul><li>一阶段：“业务数据”和“回滚日志”记录在同一个本地事务中提交，释放本地锁和连接资源；（本地事务，就已经在数据库持久化）</li><li>二阶段：提交异步化，非常快速的完成（正常情况，直接提交，同步TC server的状态，删除回滚日志）；回滚通过一阶段的回滚日志进行反向补偿（异常情况，反向补偿）；</li></ul><h5 id="并发情况下，对AT模式，数据一致性的考验"><a href="#并发情况下，对AT模式，数据一致性的考验" class="headerlink" title="并发情况下，对AT模式，数据一致性的考验"></a>并发情况下，对AT模式，数据一致性的考验</h5><h6 id="写隔离"><a href="#写隔离" class="headerlink" title="写隔离"></a>写隔离</h6><p>一阶段本地事务提交前，要确保拿到 <strong>全局锁</strong> ；拿不到 <strong>全局锁</strong> 不能提交本地事务。</p><p>拿 <strong>全局锁</strong> 的尝试被限制在一定范围内，超出范围将放弃，并回滚本地事务，释放本地锁</p><h6 id="读隔离"><a href="#读隔离" class="headerlink" title="读隔离"></a>读隔离</h6><p>数据库本地事务的隔离级别</p><p>在数据库本地事务隔离级别 <strong>读已提交（Read Committed）</strong> 或以上的基础上，Seata（AT 模式）的默认全局隔离级别是 <strong>读未提交（Read Uncommitted）</strong> 。</p><p>如果应用在特定场景下，必需要求全局的 <strong>读已提交</strong> ，目前 Seata 的方式是通过 SELECT FOR UPDATE 语句的代理。</p><h4 id="TCC模式"><a href="#TCC模式" class="headerlink" title="TCC模式"></a>TCC模式</h4><h4 id="Saga模式"><a href="#Saga模式" class="headerlink" title="Saga模式"></a>Saga模式</h4><h4 id="XA模式（正在研发中…）"><a href="#XA模式（正在研发中…）" class="headerlink" title="XA模式（正在研发中…）"></a>XA模式（正在研发中…）</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;本地事务&quot;&gt;&lt;a href=&quot;#本地事务&quot; class=&quot;headerlink&quot; title=&quot;本地事务&quot;&gt;&lt;/a&gt;本地事务&lt;/h2&gt;&lt;p&gt;数据操作的最小单元是事务，而不是一条SQL语句&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext</summary>
      
    
    
    
    
    <category term="事物控制" scheme="http://example.com/tags/%E4%BA%8B%E7%89%A9%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>Gradle 脚本指南</title>
    <link href="http://example.com/2020/06/28/Gradle%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97/"/>
    <id>http://example.com/2020/06/28/Gradle%E8%84%9A%E6%9C%AC%E6%8C%87%E5%8D%97/</id>
    <published>2020-06-28T01:17:26.014Z</published>
    <updated>2021-05-26T14:39:56.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gradle-执行说明"><a href="#Gradle-执行说明" class="headerlink" title="Gradle 执行说明"></a>Gradle 执行说明</h2><h2 id="build-gradle-脚本说明"><a href="#build-gradle-脚本说明" class="headerlink" title="build.gradle 脚本说明"></a>build.gradle 脚本说明</h2><h3 id="配置仓库"><a href="#配置仓库" class="headerlink" title="配置仓库"></a>配置仓库</h3><ul><li>gradle实现离线仓库还可以调用maven的离线仓库</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    mavenLocal() <span class="comment">//直接使用本地maven仓库</span></span><br><span class="line">    maven &#123; url <span class="string">&quot;http://maven.aliyun.com/nexus/content/groups/public&quot;</span> &#125;<span class="comment">//使用国内镜像仓库</span></span><br><span class="line">    mavenCentral()<span class="comment">//直接使用国外中央仓库</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>使用mavenLocal() 时Gradle默认会按以下顺序去查找本地的maven仓库：${USER_HOME}/.m2/settings.xml &gt;&gt; M2_HOME/conf/settings.xml &gt;&gt; ${USER_HOME}/.m2/repository。注意，环境变量要加入M2_HOME， 我们配环境时很多时候都是使用MAVEN_HOME或者直接在path中输入bin路径了，导致mavenLocal无法生效。</p></li><li><p>如果本地没有相关jar包，gradle会下载到${USER_HOME}/.gradle文件夹下，若想让gradle下载到指定文件夹，配置GRADLE_USER_HOME环境变量</p></li></ul><h3 id="dependencies-命令说明"><a href="#dependencies-命令说明" class="headerlink" title="dependencies 命令说明"></a>dependencies 命令说明</h3><ol><li><p><strong>implementation</strong><br>这个指令的特点就是，对于使用了该命令编译的依赖，对该项目有依赖的项目将无法访问到使用该命令编译的依赖中的任何程序，也就是将该依赖隐藏在内部，而不对外部公开。</p></li><li><p><strong>api</strong><br>完全等同于compile指令。</p></li><li><p><strong>compile</strong><br>这种是我们最常用的方式，使用该方式依赖的库将会参与编译和打包。</p></li><li><p><strong>testCompile</strong><br>只在单元测试代码的编译以及最终打包测试时有效。</p></li><li><p><strong>debugCompile</strong><br>只在debug模式的编译和最终的debug打包时有效。</p></li><li><p><strong>releaseCompile</strong><br>仅仅针对Release模式的编译和最终的Release打包。</p></li><li><p><strong>provided</strong><br>只在编译时有效，不会参与打包，可以在自己的moudle中使用该方式依赖。</p></li><li><p><strong>apk（runtimeOnly）</strong></p><p>只在生成apk的时候参与打包，编译时不会参与，很少用。</p></li></ol><h2 id="19版IDEA-Feature介绍"><a href="#19版IDEA-Feature介绍" class="headerlink" title="19版IDEA Feature介绍"></a>19版IDEA Feature介绍</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Gradle-执行说明&quot;&gt;&lt;a href=&quot;#Gradle-执行说明&quot; class=&quot;headerlink&quot; title=&quot;Gradle 执行说明&quot;&gt;&lt;/a&gt;Gradle 执行说明&lt;/h2&gt;&lt;h2 id=&quot;build-gradle-脚本说明&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    
    <category term="项目构建" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Git操作命令</title>
    <link href="http://example.com/2020/06/28/Git%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2020/06/28/Git%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</id>
    <published>2020-06-28T01:17:25.989Z</published>
    <updated>2021-05-28T11:59:23.099Z</updated>
    
    <content type="html"><![CDATA[<p><strong>工作区 ==&gt;&gt;&gt; 暂存区 ==&gt;&gt;&gt; 本地版本库 ==&gt;&gt;&gt; 远程版本库</strong></p><h3 id="git-init（初始化）"><a href="#git-init（初始化）" class="headerlink" title="git init（初始化）"></a>git init（初始化）</h3><h5 id="场景一：把已有的项目代码纳入Git管理"><a href="#场景一：把已有的项目代码纳入Git管理" class="headerlink" title="场景一：把已有的项目代码纳入Git管理"></a>场景一：把已有的项目代码纳入Git管理</h5><ul><li>cd 项目代码所在目录</li><li>git init</li></ul><h5 id="场景二：新建项目直接用Git管理"><a href="#场景二：新建项目直接用Git管理" class="headerlink" title="场景二：新建项目直接用Git管理"></a>场景二：新建项目直接用Git管理</h5><ul><li>cd 工作空间目录</li><li>git init project_name（创建项目并纳入Git管理）</li><li>cd project_name</li></ul><h3 id="git-config（用户配置）"><a href="#git-config（用户配置）" class="headerlink" title="git config（用户配置）"></a>git config（用户配置）</h3><ul><li>git config –local user.name  ‘’（只对某个仓库生效）</li><li>git config –local user.email ‘’（只对某个仓库生效）</li><li>git config –global user.name ‘’（只对当前用户所有仓库生效）</li><li>git config –global user.email ‘’（只对当前用户所有仓库生效）</li><li>git config –system user.name ‘’（对系统所有用户所有仓库生效）</li><li>git config –system user.email ‘’（对系统所有用户所有仓库生效）</li><li>git config –list –local</li><li>git config –list –global</li><li>git config –list –system</li></ul><h3 id="其他操作（版本管理）"><a href="#其他操作（版本管理）" class="headerlink" title="其他操作（版本管理）"></a>其他操作（版本管理）</h3><ul><li><p>git status（查看变更操作）</p></li><li><p>git add file…（工作区 ==&gt;&gt;&gt; 暂存区 ）</p></li><li><p>git add -u（已经被tracked的工作区文件可以直接被加入暂存区，无需再按文件名添加）</p></li><li><p>git commit -m’注释…’（暂存区 ==&gt;&gt;&gt; 本地版本库）</p></li><li><p>git commit -am’注释…’（工作区 ==&gt;&gt;&gt; 本地版本库 ）</p></li><li><p>git mv 旧文件名 新文件名（将工作区文件更名，并加入到暂存区）</p></li><li><p>git branch XXX（新建分支）</p></li><li><p>git branch -v（查看本地所有分支）</p></li><li><p>git branch -av（查看所有分支）</p></li><li><p>git branch -d 分支名称</p></li><li><p>git branch -D 分支名称</p></li><li><p>git checkout XXX（切换分支）</p></li><li><p>git checkout -b 分支名称 历史版本commitID（从历史版本迁出一个分支）</p></li><li><p>git commit –amend（对最近一次commit message的信息做变更）（该变更的commitID会重新生成）</p></li><li><p>git rebase -i commitID（变基操作：变该变的commitID的parentID）（对历史某一次的commit message的信息做变更）（变更本身及后续所有提交的commitID都会重新生成）</p></li><li><p>git reset –hard（清空工作区、暂存区的所有变更操作）</p></li><li><p>git reset –hard commitID（将commitID之后的版本都丢弃，工作区与暂存区都恢复到该版本历史）</p></li><li><p>git reset HEAD（将暂存区变更取消，恢复成当前分支的最新提交版本）</p></li><li><p>git checkout – filename（filename已经加入暂存区，需要将工作区的后续变更恢复到暂存区版本）（撤销工作区修改）</p></li><li><p>git reset HEAD – filename（将已经存在于暂存区的文件filename，撤销（unstage）到工作区）</p></li><li><p>git diff 分支一 分支二（比较两个分支的所有文件差异）</p></li><li><p>git diff 分支一 分支二 – filename（比较两个分支某个文件的差异）</p></li><li><p>git diff 分支一（commitID） 分支二（commitID） – filename（比较两个分支基于某个版本某个文件的差异）</p></li><li><p>git rm filename（删除文件，并将删除操作放入暂存区，无需先在工作目录下删除 filename）</p></li><li><p>git stash（将工作区另存堆栈空间）</p></li><li><p>git stash list（查看堆栈空间信息）</p></li><li><p>git stash apply（应用堆栈信息，继续保留堆栈记录）</p></li><li><p>git stash pop（应用并丢弃堆栈信息）</p></li><li><p>git remote -v（查看本地关联的远端仓库）</p></li><li><p>git remote rm 远程仓库别称（删除本地关联的远程仓库信息）</p></li><li><p>git remote add 远端仓库别称 智能协议（添加远端仓库信息，关联本地仓库）</p></li><li><p>git push 远程仓库别名 本地分支：远程分支（将本地分支推送到远程分支）</p></li><li><p>git push –set-upstream 新仓库名称 本地分支名称 （将本地仓库某分支推送远端仓库）</p></li><li><p>git push 远端仓库别称 –all（将本地仓库所有分支记录都推送远端）</p></li><li><p><del>git push -f 远程仓库名称 本地分支名称（强制推送本地分支版本到远端）</del></p></li><li><p>git fetch 远端仓库别称 远程分支名称（拉取远程分支名称）</p></li><li><p>none-fast-forward（没有共同祖先）</p></li><li><p>本地切换到该分支  git merge 远端仓库别称/远端分支名称</p></li><li><p>git merge –allow-unrelated-histories 远端仓库别称/远端分支名称（允许合并不相关的历史树）</p></li><li><p>git merge 远端仓库名称/远端分支名称（合并远端分支到本地同名分支）</p></li><li><p>git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;（将远程分支版本拉取并合并到本地指定分支）</p></li><li><p>Git  branch –d xxx（删除本地分支）</p></li><li><p>Git push origin –delete xxx（删除远程分支）</p></li></ul><h3 id="git-log（操作记录）"><a href="#git-log（操作记录）" class="headerlink" title="git log（操作记录）"></a>git log（操作记录）</h3><ul><li>git log（查看版本库历史（自下而上，由远及近））</li><li>git log -number（最近number次的历史记录）</li><li>git log –oneline（单行显示，当前分支版本库历史记录）（内容：简短commitID 版本注释）</li><li>git log –oneline 分支名（单行显示，某个分支版本库历史记录）（内容：简短commitID 版本注释）</li><li>git log –oneline –all（单行显示，所有分支版本库历史记录）（内容：简短commitID 版本注释）</li><li>git log –oneline –graph（树形结构查看版本库历史（自下而上，由远及近））（内容：简短commitID 版本注释）</li><li>git log –oneline –all -n5 –graph（单行显示，所有分支版本库最近5条历史记录，并显示树状图）（内容：简短commitID 版本注释）</li><li>git diff（对比所有工作区与暂存区的差异）</li><li>git diff – 文件名（对比指定文件工作区与暂存区的差异）</li><li>git diff –cached（暂存区与 HEAD 版本库最新版本文件对比）</li><li>git diff commitID commitID（两个版本比对）</li><li>git diff HEAD HEAD^^（当前版本与祖父版本比对）</li><li>git diff HEAD HEAD~2（当前版本与祖父版本比对）</li><li>gitk –all（图形化界面）</li></ul><h3 id="git目录结构"><a href="#git目录结构" class="headerlink" title=".git目录结构"></a>.git目录结构</h3><p>./HEAD（记录当前分支名称，更改该文件与checkout 分支名 具有同样的效果）</p><p>./config（本仓库的配置）</p><p>./refs（存放各个分支和Tag的信息）</p><p>./refs/heads</p><p>./refs/heads/master（存放对象，最近一次commit 的指针信息）</p><ul><li>git cat-file -t 对象部分前缀（可以查看该对象类型）</li><li>git cat-file -p 对象部分前缀（可以查看该对象内容）</li></ul><p>./refs/heads/其他分支名称</p><p>./refs/tag</p><p>./objects（）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;工作区 ==&amp;gt;&amp;gt;&amp;gt; 暂存区 ==&amp;gt;&amp;gt;&amp;gt; 本地版本库 ==&amp;gt;&amp;gt;&amp;gt; 远程版本库&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;git-init（初始化）&quot;&gt;&lt;a href=&quot;#git-init（初始化）&quot; cla</summary>
      
    
    
    
    <category term="版本控制工具" scheme="http://example.com/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="Git" scheme="http://example.com/tags/Git/"/>
    
  </entry>
  
</feed>
